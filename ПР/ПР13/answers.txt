1. Promise.then().catch() - цепочный подход, async/await - синхронный стиль. Async/await читаемее для последовательных операций, then/catch лучше для параллельных 
2. Promise.all ждет все промисы, если один с ошибкой - сразу reject со своей ошибкой 
3. Promise.all - все успешно, Promise.race - первый завершенный, Promise.allSettled - все со статусами 
4. Через цикл с экспоненциальной задержкой Math.pow(2, attempt) * delay 
5. Race condition - когда результат зависит от порядка выполнения, избегать через правильную синхронизацию 
6. Кэширование через Map/WeakMap, стратегии: TTL, LRU, мультиуровневое 
7. Оптимизация: параллельные запросы, кэширование, пагинация, ленивая загрузка 
8. Обработка ошибок: catch в цепочках, try/catch в async/await, never не проглатывать 
9. Преимущества async/await: читаемость, простота отладки, синхронный стиль 
10. Отладка: console.log, debugger, DevTools, async stack traces