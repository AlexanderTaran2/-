const express = require('express');
const database = require('./db');
const bookRoutes = require('./routes/books');
const authorRoutes = require('./routes/authors');

const app = express();
const PORT = 3000;

app.use(express.json());

// CORS
app.use((req, res, next) => {
    res.header('Access-Control-Allow-Origin', '*');
    res.header('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE');
    res.header('Access-Control-Allow-Headers', 'Content-Type');
    next();
});

// –ú–∞—Ä—à—Ä—É—Ç—ã
app.use('/api/books', bookRoutes);
app.use('/api/authors', authorRoutes);

// –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
app.get('/', (req, res) => {
    res.json({
        message: 'üìö API –ë–∏–±–ª–∏–æ—Ç–µ–∫–∏ - –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∞—è —Ä–∞–±–æ—Ç–∞ ‚Ññ22',
        endpoints: {
            books: {
                'GET /api/books': '–ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –∫–Ω–∏–≥–∏',
                'GET /api/books/:id': '–ü–æ–ª—É—á–∏—Ç—å –∫–Ω–∏–≥—É –ø–æ ID', 
                'POST /api/books': '–°–æ–∑–¥–∞—Ç—å –∫–Ω–∏–≥—É'
            },
            authors: {
                'GET /api/authors': '–ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ—Ö –∞–≤—Ç–æ—Ä–æ–≤',
                'POST /api/authors': '–°–æ–∑–¥–∞—Ç—å –∞–≤—Ç–æ—Ä–∞'
            }
        }
    });
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ 404
app.use('*', (req, res) => {
    res.status(404).json({
        success: false,
        error: '–ú–∞—Ä—à—Ä—É—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω'
    });
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
app.use((error, req, res, next) => {
    console.error('–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:', error);
    
    res.status(500).json({
        success: false,
        error: '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞'
    });
});

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
app.listen(PORT, async () => {
    console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:${PORT}`);
    
    try {
        await database.connect();
        console.log('‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–¥–∫–ª—é—á–µ–Ω–∞');
        database.close();
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ë–î:', error.message);
    }
});