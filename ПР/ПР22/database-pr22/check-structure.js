const fs = require('fs');
const path = require('path');

console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞...');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤
const filesToCheck = [
    'app.js',
    'routes/authors.js', 
    'models/Author.js',
    'db.js'
];

filesToCheck.forEach(file => {
    const exists = fs.existsSync(path.join(__dirname, file));
    console.log(`${exists ? '‚úÖ' : '‚ùå'} ${file}`);
});

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ authors.js
try {
    const authorsContent = fs.readFileSync('./routes/authors.js', 'utf8');
    console.log('‚úÖ routes/authors.js —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
    console.log('üìÑ –ü–µ—Ä–≤—ã–µ 100 —Å–∏–º–≤–æ–ª–æ–≤:', authorsContent.substring(0, 100));
} catch (error) {
    console.log('‚ùå routes/authors.js –Ω–µ —á–∏—Ç–∞–µ—Ç—Å—è');
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º–ø–æ—Ä—Ç—ã
console.log('\nüîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–æ–≤...');
try {
    const Author = require('./models/Author');
    console.log('‚úÖ models/Author.js –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è');
} catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ Author:', error.message);
}