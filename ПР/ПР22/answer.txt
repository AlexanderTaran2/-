Ответы на вопросы для самоконтроля
1. В чем преимущества использования миграций для управления схемой БД?
- **Контроль версий** - история изменений структуры БД
- **Совместная работа** - единый процесс для команды  
- **Воспроизводимость** - одинаковое состояние БД на всех окружениях
- **Откат изменений** - возможность вернуться к предыдущей версии
2. Какие типы связей между таблицами вы знаете и как их организовать?
- **Один-ко-многим** (1:N) - внешний ключ в дочерней таблице (author_id в books)
- **Многие-ко-многим** (N:M) - через связующую таблицу
- **Один-к-одному** (1:1) - внешний ключ с UNIQUE ограничением
3. Что такое ORM и каковы его преимущества перед нативными SQL-запросами?
**ORM** (Object-Relational Mapping) - технология отображения объектов на таблицы БД.
**Преимущества:**
- Абстракция от конкретной СУБД
- Безопасность от SQL-инъекций
- Ускорение разработки
- Автодокументирование кода
4. Как организовать пагинацию на уровне базы данных?
Использовать `LIMIT` и `OFFSET` в SQL-запросе:
```sql
SELECT * FROM books LIMIT 10 OFFSET 20; -- страница 3 (пропустить 20, взять 10)
5. Что такое транзакции и когда их следует использовать?
Транзакция - атомарная группа операций (все или ничего).
Использовать когда:
Несколько связанных операций
Требуется целостность данных
Необходим откат при ошибке
6. Какие методы оптимизации запросов к базе данных вы знаете?
Индексы на часто используемых полях
Нормализация таблиц
Кэширование результатов
EXPLAIN для анализа запросов
Пакетные операции вместо одиночных
7. Как организовать обработку ошибок при работе с БД?
Try-catch блоки вокруг операций с БД
Валидация данных перед записью
Единый обработчик ошибок
Логирование ошибок для отладки
Транзакции с rollback при ошибках
8. В чем разница между внутренним и внешним соединением таблиц?
INNER JOIN - только совпадающие записи из обеих таблиц
LEFT JOIN - все записи левой таблицы + совпадающие правой
RIGHT JOIN - все записи правой таблицы + совпадающие левой
FULL JOIN - все записи обеих таблиц