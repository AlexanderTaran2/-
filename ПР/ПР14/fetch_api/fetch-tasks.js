// === FETCH API - –ü–û–õ–ù–ê–Ø –õ–û–ö–ê–õ–¨–ù–ê–Ø –í–ï–†–°–ò–Ø ===
const API_BASE_URL = ''; // –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ - –∑–∞–ø—Ä–æ—Å—ã –±—É–¥—É—Ç –ª–æ–∫–∞–ª—å–Ω—ã–º–∏

console.log("‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ª–æ–∫–∞–ª—å–Ω—ã–π API");

// –ó–ê–î–ê–ù–ò–ï 1: –ë–∞–∑–æ–≤—ã–µ GET –∑–∞–ø—Ä–æ—Å—ã

// 1.1. –°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é fetchGetRequest, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–ø–æ–ª–Ω—è–µ—Ç –ø—Ä–æ—Å—Ç–æ–π GET –∑–∞–ø—Ä–æ—Å
async function fetchGetRequest() {
    const output = document.getElementById('get-output');
    output.innerHTML = "üîÑ –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ GET –∑–∞–ø—Ä–æ—Å–∞...";
    
    try {
        const response = await fetch('/posts/1');
        if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);
        
        const data = await response.json();
        output.innerHTML = `‚úÖ GET –∑–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–µ–Ω:\n\n${JSON.stringify(data, null, 2)}`;
    } catch (error) {
        output.innerHTML = `‚ùå –û—à–∏–±–∫–∞: ${error.message}`;
    }
}

// 1.2. –°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é fetchJsonData, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–ª—É—á–∞–µ—Ç –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç JSON –¥–∞–Ω–Ω—ã–µ
async function fetchJsonData() {
    const output = document.getElementById('get-data');
    output.innerHTML = "üîÑ –ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...";
    
    try {
        const response = await fetch('/users');
        if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);
        
        const data = await response.json();
        const users = data.users;
        
        output.innerHTML = '';
        users.forEach(user => {
            const userCard = document.createElement('div');
            userCard.className = 'user-card';
            userCard.innerHTML = `
                <h3>üë§ ${user.name}</h3>
                <p>üìß ${user.email}</p>
                <p>üìû ${user.phone}</p>
                <p>üë¶ ${user.username}</p>
                <p>üÜî ID: ${user.id}</p>
            `;
            output.appendChild(userCard);
        });
    } catch (error) {
        output.innerHTML = `‚ùå –û—à–∏–±–∫–∞: ${error.message}`;
    }
}

// 1.3. –°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é fetchWithError, –∫–æ—Ç–æ—Ä–∞—è —Ç–µ—Å—Ç–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–æ–∫
async function fetchWithError() {
    const output = document.getElementById('get-output');
    output.innerHTML = "üîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–æ–∫...";
    
    try {
        const response = await fetch('/nonexistent');
        if (!response.ok) throw new Error(`HTTP ${response.status}: ${response.statusText}`);
        
        const data = await response.json();
        output.innerHTML = `–î–∞–Ω–Ω—ã–µ: ${JSON.stringify(data)}`;
    } catch (error) {
        output.innerHTML = `‚ùå –ü–æ–π–º–∞–Ω–∞ –æ—à–∏–±–∫–∞:\n${error.message}\n\nüí° –≠—Ç–æ HTTP –æ—à–∏–±–∫–∞ 404 - —ç–Ω–¥–ø–æ–∏–Ω—Ç –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`;
    }
}

// 1.4. –°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é setupGetRequests, –∫–æ—Ç–æ—Ä–∞—è –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
function setupGetRequests() {
    document.getElementById('fetch-get').addEventListener('click', fetchGetRequest);
    document.getElementById('fetch-json').addEventListener('click', fetchJsonData);
    document.getElementById('fetch-error').addEventListener('click', fetchWithError);
}

// –ó–ê–î–ê–ù–ò–ï 2: POST, PUT, DELETE –∑–∞–ø—Ä–æ—Å—ã

// 2.1. –°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é fetchPostRequest, –∫–æ—Ç–æ—Ä–∞—è –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç POST –∑–∞–ø—Ä–æ—Å
async function fetchPostRequest() {
    const output = document.getElementById('crud-output');
    output.innerHTML = "üîÑ –û—Ç–ø—Ä–∞–≤–∫–∞ POST –∑–∞–ø—Ä–æ—Å–∞...";
    
    try {
        const response = await fetch('/users', {
            method: 'POST',
            headers: {'Content-Type': 'application/json'},
            body: JSON.stringify({
                name: '–ù–æ–≤—ã–π –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
                email: 'new@example.com',
                phone: '111-222-3333',
                username: 'newuser'
            })
        });
        
        if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);
        
        const data = await response.json();
        output.innerHTML = `‚úÖ POST —É—Å–ø–µ—à–µ–Ω! –°–æ–∑–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:\n\n${JSON.stringify(data, null, 2)}`;
    } catch (error) {
        output.innerHTML = `‚ùå –û—à–∏–±–∫–∞: ${error.message}`;
    }
}

// 2.2. –°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é fetchPutRequest, –∫–æ—Ç–æ—Ä–∞—è –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç PUT –∑–∞–ø—Ä–æ—Å
async function fetchPutRequest() {
    const output = document.getElementById('crud-output');
    output.innerHTML = "üîÑ –û—Ç–ø—Ä–∞–≤–∫–∞ PUT –∑–∞–ø—Ä–æ—Å–∞...";
    
    try {
        const response = await fetch('/users/1', {
            method: 'PUT',
            headers: {'Content-Type': 'application/json'},
            body: JSON.stringify({
                name: '–ü–æ–ª–Ω–æ—Å—Ç—å—é –û–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –ò–º—è',
                email: 'completely.updated@example.com',
                phone: '999-888-7777',
                username: 'fullyupdated'
            })
        });
        
        if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);
        
        const data = await response.json();
        output.innerHTML = `‚úÖ PUT —É—Å–ø–µ—à–µ–Ω! –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ–±–Ω–æ–≤–ª–µ–Ω:\n\n${JSON.stringify(data, null, 2)}\n\nüí° PUT –∑–∞–º–µ–Ω—è–µ—Ç –í–ï–°–¨ —Ä–µ—Å—É—Ä—Å`;
    } catch (error) {
        output.innerHTML = `‚ùå –û—à–∏–±–∫–∞: ${error.message}`;
    }
}

// 2.3. –°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é fetchPatchRequest, –∫–æ—Ç–æ—Ä–∞—è –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç PATCH –∑–∞–ø—Ä–æ—Å
async function fetchPatchRequest() {
    const output = document.getElementById('crud-output');
    output.innerHTML = "üîÑ –û—Ç–ø—Ä–∞–≤–∫–∞ PATCH –∑–∞–ø—Ä–æ—Å–∞...";
    
    try {
        const response = await fetch('/users/1', {
            method: 'PATCH',
            headers: {'Content-Type': 'application/json'},
            body: JSON.stringify({
                email: 'partially.updated@example.com'
            })
        });
        
        if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);
        
        const data = await response.json();
        output.innerHTML = `‚úÖ PATCH —É—Å–ø–µ—à–µ–Ω! –¢–æ–ª—å–∫–æ email –æ–±–Ω–æ–≤–ª–µ–Ω:\n\n${JSON.stringify(data, null, 2)}\n\nüí° PATCH –æ–±–Ω–æ–≤–ª—è–µ—Ç —Ç–æ–ª—å–∫–æ —É–∫–∞–∑–∞–Ω–Ω—ã–µ –ø–æ–ª—è`;
    } catch (error) {
        output.innerHTML = `‚ùå –û—à–∏–±–∫–∞: ${error.message}`;
    }
}

// 2.4. –°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é fetchDeleteRequest, –∫–æ—Ç–æ—Ä–∞—è –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç DELETE –∑–∞–ø—Ä–æ—Å
async function fetchDeleteRequest() {
    const output = document.getElementById('crud-output');
    output.innerHTML = "üîÑ –û—Ç–ø—Ä–∞–≤–∫–∞ DELETE –∑–∞–ø—Ä–æ—Å–∞...";
    
    try {
        const response = await fetch('/users/2', {
            method: 'DELETE'
        });
        
        if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);
        
        output.innerHTML = `‚úÖ DELETE —É—Å–ø–µ—à–µ–Ω! –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID 2 —É–¥–∞–ª–µ–Ω.\n–°—Ç–∞—Ç—É—Å: ${response.status}`;
    } catch (error) {
        output.innerHTML = `‚ùå –û—à–∏–±–∫–∞: ${error.message}`;
    }
}

// 2.5. –°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é setupCrudRequests, –∫–æ—Ç–æ—Ä–∞—è –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
function setupCrudRequests() {
    document.getElementById('fetch-post').addEventListener('click', fetchPostRequest);
    document.getElementById('fetch-put').addEventListener('click', fetchPutRequest);
    document.getElementById('fetch-patch').addEventListener('click', fetchPatchRequest);
    document.getElementById('fetch-delete').addEventListener('click', fetchDeleteRequest);
}

// –ó–ê–î–ê–ù–ò–ï 3: –ó–∞–≥–æ–ª–æ–≤–∫–∏ –∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã

// 3.1. –°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é fetchWithHeaders, –∫–æ—Ç–æ—Ä–∞—è –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–ø—Ä–æ—Å —Å –∫–∞—Å—Ç–æ–º–Ω—ã–º–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏
async function fetchWithHeaders() {
    const output = document.getElementById('headers-output');
    output.innerHTML = "üîÑ –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ —Å –∫–∞—Å—Ç–æ–º–Ω—ã–º–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏...";
    
    try {
        const response = await fetch('/users/1', {
            headers: {
                'X-Custom-Header': 'MyCustomValue',
                'Authorization': 'Bearer fake-jwt-token-12345',
                'X-API-Key': 'test-api-key',
                'Accept': 'application/json'
            }
        });
        
        if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);
        
        const data = await response.json();
        output.innerHTML = `‚úÖ –ó–∞–ø—Ä–æ—Å —Å –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏ —É—Å–ø–µ—à–µ–Ω!\n\n–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏:\n- X-Custom-Header: MyCustomValue\n- Authorization: Bearer fake-jwt-token-12345\n- X-API-Key: test-api-key\n- Accept: application/json\n\n–î–∞–Ω–Ω—ã–µ: ${JSON.stringify(data, null, 2)}`;
    } catch (error) {
        output.innerHTML = `‚ùå –û—à–∏–±–∫–∞: ${error.message}`;
    }
}

// 3.2. –°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é fetchWithAuth, –∫–æ—Ç–æ—Ä–∞—è –∏–º–∏—Ç–∏—Ä—É–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
async function fetchWithAuth() {
    const output = document.getElementById('headers-output');
    output.innerHTML = "üîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...";
    
    try {
        // Basic Auth
        const basicAuth = btoa('user:password');
        
        const response = await fetch('/users/1', {
            headers: {
                'Authorization': `Basic ${basicAuth}`
            }
        });
        
        if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);
        
        output.innerHTML = `‚úÖ Basic Auth —É—Å–ø–µ—à–µ–Ω!\n–ó–∞–≥–æ–ª–æ–≤–æ–∫: Authorization: Basic ${basicAuth}\n\nüí° –°–ø–æ—Å–æ–±—ã –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:\n1. Basic Auth: Basic base64(username:password)\n2. Bearer Token: Bearer token-value\n3. API Key: X-API-Key: key-value`;
    } catch (error) {
        output.innerHTML = `‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: ${error.message}`;
    }
}

// 3.3. –°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é fetchWithParams, –∫–æ—Ç–æ—Ä–∞—è –¥–æ–±–∞–≤–ª—è–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∫ URL
async function fetchWithParams() {
    const output = document.getElementById('headers-output');
    output.innerHTML = "üîÑ –ó–∞–ø—Ä–æ—Å —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ URL...";
    
    try {
        // –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ URLSearchParams
        const params = new URLSearchParams({
            '_limit': '2',
            '_sort': 'id',
            '_order': 'desc'
        });
        
        const response = await fetch(`/users?${params}`);
        
        if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);
        
        const data = await response.json();
        output.innerHTML = `‚úÖ –ó–∞–ø—Ä–æ—Å —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ —É—Å–ø–µ—à–µ–Ω!\n\nURL: /users?${params}\n\n–ü–æ–ª—É—á–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${data.users.length}\n–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:\n- _limit=2 (–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ)\n- _sort=id (—Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞)\n- _order=desc (–ø–æ—Ä—è–¥–æ–∫)`;
    } catch (error) {
        output.innerHTML = `‚ùå –û—à–∏–±–∫–∞: ${error.message}`;
    }
}

// 3.4. –°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é fetchWithTimeout, –∫–æ—Ç–æ—Ä–∞—è —Ä–µ–∞–ª–∏–∑—É–µ—Ç —Ç–∞–π–º–∞—É—Ç –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞
async function fetchWithTimeout() {
    const output = document.getElementById('headers-output');
    output.innerHTML = "üîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–∞–π–º–∞—É—Ç–∞ (2 —Å–µ–∫—É–Ω–¥—ã)...";
    
    try {
        const controller = new AbortController();
        const timeoutId = setTimeout(() => {
            controller.abort();
        }, 2000);
        
        // –ò–º–∏—Ç–∞—Ü–∏—è –º–µ–¥–ª–µ–Ω–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
        const response = await fetch('/users?delay=3000', {
            signal: controller.signal
        });
        
        clearTimeout(timeoutId);
        
        if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);
        
        output.innerHTML = "‚úÖ –ó–∞–ø—Ä–æ—Å –∑–∞–≤–µ—Ä—à–µ–Ω –¥–æ —Ç–∞–π–º–∞—É—Ç–∞!";
    } catch (error) {
        if (error.name === 'AbortError') {
            output.innerHTML = "‚è∞ –ó–∞–ø—Ä–æ—Å –æ—Ç–º–µ–Ω–µ–Ω –ø–æ —Ç–∞–π–º–∞—É—Ç—É (2 —Å–µ–∫—É–Ω–¥—ã)!\n\nüí° AbortController –ø–æ–∑–≤–æ–ª—è–µ—Ç –æ—Ç–º–µ–Ω—è—Ç—å –∑–∞–ø—Ä–æ—Å—ã.";
        } else {
            output.innerHTML = `‚ùå –î—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞: ${error.message}`;
        }
    }
}

// 3.5. –°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é setupHeadersAndParams, –∫–æ—Ç–æ—Ä–∞—è –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
function setupHeadersAndParams() {
    document.getElementById('fetch-headers').addEventListener('click', fetchWithHeaders);
    document.getElementById('fetch-auth').addEventListener('click', fetchWithAuth);
    document.getElementById('fetch-params').addEventListener('click', fetchWithParams);
    document.getElementById('fetch-timeout').addEventListener('click', fetchWithTimeout);
}

// –ó–ê–î–ê–ù–ò–ï 4: –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤

// 4.1. –°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é fetchAndCheckStatus, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞
async function fetchAndCheckStatus() {
    const output = document.getElementById('response-output');
    output.innerHTML = "üîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–æ–≤ –æ—Ç–≤–µ—Ç–∞...";
    
    try {
        const testUrls = [
            '/users/1', // –î–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å 200
            '/nonexistent', // –î–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å 404
            '/error' // –î–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å 500
        ];
        
        for (const url of testUrls) {
            const response = await fetch(url);
            
            output.innerHTML += `\n\nURL: ${url}`;
            output.innerHTML += `\n–°—Ç–∞—Ç—É—Å: ${response.status} ${response.statusText}`;
            output.innerHTML += `\nOK: ${response.ok}`;
            
            if (!response.ok) {
                output.innerHTML += `\n‚ö†Ô∏è –≠—Ç–æ HTTP –æ—à–∏–±–∫–∞!`;
            } else {
                const data = await response.json();
                output.innerHTML += `\n‚úÖ –£—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç`;
            }
        }
    } catch (error) {
        output.innerHTML += `\n‚ùå –°–µ—Ç–µ–≤–∞—è –æ—à–∏–±–∫–∞: ${error.message}`;
    }
}

// 4.2. –°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é fetchAndReadHeaders, –∫–æ—Ç–æ—Ä–∞—è —á–∏—Ç–∞–µ—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞
async function fetchAndReadHeaders() {
    const output = document.getElementById('response-output');
    output.innerHTML = "üîÑ –ß—Ç–µ–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –æ—Ç–≤–µ—Ç–∞...";
    
    try {
        const response = await fetch('/users/1');
        
        if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);
        
        output.innerHTML = "üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –æ—Ç–≤–µ—Ç–µ:\n\n";
        output.innerHTML += `<strong>Status:</strong> ${response.status} ${response.statusText}\n`;
        output.innerHTML += `<strong>OK:</strong> ${response.ok}\n`;
        output.innerHTML += `<strong>URL:</strong> ${response.url}\n`;
        output.innerHTML += `<strong>Type:</strong> ${response.type}\n`;
        
        output.innerHTML += `\nüí° –ü–æ–ª–µ–∑–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞ response:\n- status: HTTP —Å—Ç–∞—Ç—É—Å –∫–æ–¥\n- ok: boolean (true –µ—Å–ª–∏ —Å—Ç–∞—Ç—É—Å 200-299)\n- statusText: —Ç–µ–∫—Å—Ç —Å—Ç–∞—Ç—É—Å–∞\n- headers: –∑–∞–≥–æ–ª–æ–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞`;
    } catch (error) {
        output.innerHTML = `‚ùå –û—à–∏–±–∫–∞: ${error.message}`;
    }
}

// 4.3. –°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é fetchBlobData, –∫–æ—Ç–æ—Ä–∞—è —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –±–∏–Ω–∞—Ä–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
async function fetchBlobData() {
    const output = document.getElementById('response-output');
    const imageContainer = document.getElementById('image-container');
    
    output.innerHTML = "üîÑ –°–æ–∑–¥–∞–Ω–∏–µ –∏ –∑–∞–≥—Ä—É–∑–∫–∞ –±–∏–Ω–∞—Ä–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö...";
    imageContainer.innerHTML = '';
    
    try {
        // –°–æ–∑–¥–∞–µ–º –±–∏–Ω–∞—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ) –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ
        const canvas = document.createElement('canvas');
        const ctx = canvas.getContext('2d');
        canvas.width = 200;
        canvas.height = 150;
        
        // –†–∏—Å—É–µ–º –ø—Ä–æ—Å—Ç—É—é –≥—Ä–∞—Ñ–∏–∫—É
        ctx.fillStyle = '#74b9ff';
        ctx.fillRect(0, 0, 200, 150);
        ctx.fillStyle = 'white';
        ctx.font = '20px Arial';
        ctx.fillText('Fetch API Demo', 20, 75);
        
        // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ Blob
        const blob = await new Promise(resolve => canvas.toBlob(resolve, 'image/png'));
        const imageUrl = URL.createObjectURL(blob);
        
        output.innerHTML = `‚úÖ –ë–∏–Ω–∞—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–∑–¥–∞–Ω—ã!\n\n–†–∞–∑–º–µ—Ä: ${blob.size} –±–∞–π—Ç\n–¢–∏–ø: ${blob.type}`;
        
        const img = document.createElement('img');
        img.src = imageUrl;
        img.alt = '–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ';
        img.className = 'image-preview';
        imageContainer.appendChild(img);
    } catch (error) {
        output.innerHTML = `‚ùå –û—à–∏–±–∫–∞ —Ä–∞–±–æ—Ç—ã —Å –±–∏–Ω–∞—Ä–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏: ${error.message}`;
    }
}

// 4.4. –°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é fetchWithFormData, –∫–æ—Ç–æ—Ä–∞—è –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç FormData
async function fetchWithFormData() {
    const output = document.getElementById('response-output');
    output.innerHTML = "üîÑ –û—Ç–ø—Ä–∞–≤–∫–∞ FormData...";
    
    try {
        const formData = new FormData();
        formData.append('title', '–ü–æ—Å—Ç –∏–∑ FormData');
        formData.append('body', '–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –∏–∑ FormData');
        formData.append('userId', '1');
        
        // –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
        const blob = new Blob(['–ü—Ä–∏–º–µ—Ä —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —Ñ–∞–π–ª–∞'], { type: 'text/plain' });
        formData.append('file', blob, 'example.txt');
        
        const response = await fetch('/posts', {
            method: 'POST',
            body: formData
            // –ó–∞–≥–æ–ª–æ–≤–∫–∏ –Ω–µ –Ω—É–∂–Ω—ã - –±—Ä–∞—É–∑–µ—Ä —É—Å—Ç–∞–Ω–æ–≤–∏—Ç multipart/form-data –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
        });
        
        if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);
        
        const data = await response.json();
        output.innerHTML = `‚úÖ FormData –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ!\n\n–û—Ç–≤–µ—Ç:\n${JSON.stringify(data, null, 2)}\n\nüí° FormData –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç Content-Type: multipart/form-data`;
    } catch (error) {
        output.innerHTML = `‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ FormData: ${error.message}`;
    }
}

// 4.5. –°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é setupResponseHandling, –∫–æ—Ç–æ—Ä–∞—è –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
function setupResponseHandling() {
    document.getElementById('fetch-status').addEventListener('click', fetchAndCheckStatus);
    document.getElementById('fetch-response-headers').addEventListener('click', fetchAndReadHeaders);
    document.getElementById('fetch-blob').addEventListener('click', fetchBlobData);
    document.getElementById('fetch-formdata').addEventListener('click', fetchWithFormData);
}

// –ó–ê–î–ê–ù–ò–ï 5: –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫

// 5.1. –°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é fetchNetworkError, –∫–æ—Ç–æ—Ä–∞—è –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–µ—Ç–µ–≤—ã–µ –æ—à–∏–±–∫–∏
async function fetchNetworkError() {
    const output = document.getElementById('error-output');
    output.innerHTML = "üîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ—Ç–µ–≤—ã—Ö –æ—à–∏–±–æ–∫...";
    
    try {
        // –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É –¥–æ–º–µ–Ω—É
        const response = await fetch('https://nonexistent-domain-12345.com/api/data');
        
        if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);
        
        const data = await response.json();
        output.innerHTML = `–î–∞–Ω–Ω—ã–µ: ${JSON.stringify(data)}`;
    } catch (error) {
        output.innerHTML = `‚ùå –°–µ—Ç–µ–≤–∞—è –æ—à–∏–±–∫–∞:\n\n${error.message}\n\nüí° –≠—Ç–æ —Ç–∏–ø –æ—à–∏–±–∫–∏ —Å–µ—Ç–∏ (DNS, –Ω–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è)`;
    }
}

// 5.2. –°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é fetchHttpError, –∫–æ—Ç–æ—Ä–∞—è –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç HTTP –æ—à–∏–±–∫–∏
async function fetchHttpError() {
    const output = document.getElementById('error-output');
    output.innerHTML = "üîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ HTTP –æ—à–∏–±–æ–∫...";
    
    try {
        const response = await fetch('/nonexistent-endpoint');
        
        if (!response.ok) throw new Error(`HTTP ${response.status}: ${response.statusText}`);
        
        const data = await response.json();
        output.innerHTML = `–î–∞–Ω–Ω—ã–µ: ${JSON.stringify(data)}`;
    } catch (error) {
        output.innerHTML = `‚ùå HTTP –æ—à–∏–±–∫–∞:\n\n${error.message}\n\nüí° –≠—Ç–æ HTTP –æ—à–∏–±–∫–∞ (—Å—Ç–∞—Ç—É—Å 4xx/5xx)`;
    }
}

// 5.3. –°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é fetchWithAbort, –∫–æ—Ç–æ—Ä–∞—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ—Ç–º–µ–Ω—É –∑–∞–ø—Ä–æ—Å–∞
async function fetchWithAbort() {
    const output = document.getElementById('error-output');
    const abortBtn = document.getElementById('fetch-abort');
    
    output.innerHTML = "üîÑ –ó–∞–ø—É—Å–∫ –æ—Ç–º–µ–Ω—è–µ–º–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ (3 —Å–µ–∫—É–Ω–¥—ã)...";
    
    const controller = new AbortController();
    
    // –ú–µ–Ω—è–µ–º –∫–Ω–æ–ø–∫—É –Ω–∞ "–û—Ç–º–µ–Ω–∏—Ç—å"
    const originalText = abortBtn.textContent;
    abortBtn.textContent = '‚èπÔ∏è –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å';
    abortBtn.onclick = () => {
        controller.abort();
        abortBtn.textContent = '‚úÖ –ó–∞–ø—Ä–æ—Å –æ—Ç–º–µ–Ω–µ–Ω';
        abortBtn.disabled = true;
    };
    
    try {
        // –ò–º–∏—Ç–∞—Ü–∏—è –¥–æ–ª–≥–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
        const response = await fetch('/users?delay=3000', {
            signal: controller.signal
        });
        
        if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);
        
        const data = await response.json();
        output.innerHTML = `‚úÖ –ó–∞–ø—Ä–æ—Å –∑–∞–≤–µ—Ä—à–µ–Ω! –ü–æ–ª—É—á–µ–Ω–æ ${data.users.length} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π`;
    } catch (error) {
        if (error.name === 'AbortError') {
            output.innerHTML = "‚èπÔ∏è –ó–∞–ø—Ä–æ—Å –æ—Ç–º–µ–Ω–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º!";
        } else {
            output.innerHTML = `‚ùå –î—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞: ${error.message}`;
        }
    } finally {
        // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É
        setTimeout(() => {
            abortBtn.textContent = originalText;
            abortBtn.onclick = () => fetchWithAbort();
            abortBtn.disabled = false;
        }, 2000);
    }
}

// 5.4. –°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é fetchWithRetry, –∫–æ—Ç–æ—Ä–∞—è —Ä–µ–∞–ª–∏–∑—É–µ—Ç –ø–æ–≤—Ç–æ—Ä–Ω—ã–µ –ø–æ–ø—ã—Ç–∫–∏
async function fetchWithRetry(url, options = {}, retries = 3) {
    let lastError;
    
    for (let attempt = 1; attempt <= retries; attempt++) {
        try {
            console.log(`–ü–æ–ø—ã—Ç–∫–∞ ${attempt} –¥–ª—è ${url}`);
            const response = await fetch(url, options);
            
            if (!response.ok) throw new Error(`HTTP ${response.status}`);
            
            return await response.json();
        } catch (error) {
            lastError = error;
            console.log(`–ü–æ–ø—ã—Ç–∫–∞ ${attempt} –Ω–µ —É–¥–∞–ª–∞—Å—å: ${error.message}`);
            
            if (attempt < retries) {
                const delay = Math.pow(2, attempt) * 1000; // –≠–∫—Å–ø–æ–Ω–µ–Ω—Ü–∏–∞–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞
                console.log(`–ü–æ–≤—Ç–æ—Ä —á–µ—Ä–µ–∑ ${delay}–º—Å...`);
                await new Promise(resolve => setTimeout(resolve, delay));
            }
        }
    }
    
    throw lastError;
}

// 5.5. –°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é setupErrorHandling, –∫–æ—Ç–æ—Ä–∞—è –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –æ—à–∏–±–æ–∫
function setupErrorHandling() {
    document.getElementById('fetch-network-error').addEventListener('click', fetchNetworkError);
    document.getElementById('fetch-http-error').addEventListener('click', fetchHttpError);
    document.getElementById('fetch-abort').addEventListener('click', fetchWithAbort);
    document.getElementById('fetch-retry').addEventListener('click', async () => {
        const output = document.getElementById('error-output');
        output.innerHTML = "üîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –ø–æ–ø—ã—Ç–æ–∫...";
        
        try {
            // –ò—Å–ø–æ–ª—å–∑—É–µ–º URL, –∫–æ—Ç–æ—Ä—ã–π –∏–Ω–æ–≥–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—à–∏–±–∫—É
            const data = await fetchWithRetry('/users?mayFail=true', {}, 3);
            output.innerHTML = `‚úÖ –£—Å–ø–µ—Ö –ø–æ—Å–ª–µ –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –ø–æ–ø—ã—Ç–æ–∫: ${JSON.stringify(data, null, 2)}`;
        } catch (error) {
            output.innerHTML = `‚ùå –í—Å–µ –ø–æ–ø—ã—Ç–∫–∏ –Ω–µ —É–¥–∞–ª–∏—Å—å: ${error.message}`;
        }
    });
}

// –ó–ê–î–ê–ù–ò–ï 6: –ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã

// 6.1. –°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é fetchWithPromiseAll, –∫–æ—Ç–æ—Ä–∞—è –∏—Å–ø–æ–ª—å–∑—É–µ—Ç Promise.all
async function fetchWithPromiseAll() {
    const output = document.getElementById('parallel-output');
    output.innerHTML = "üîÑ –ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–æ–≤...";
    
    const startTime = Date.now();
    
    try {
        const promises = [
            fetch('/users/1').then(r => r.json()),
            fetch('/users/2').then(r => r.json()),
            fetch('/posts/1').then(r => r.json()),
            fetch('/posts/2').then(r => r.json())
        ];
        
        const results = await Promise.all(promises);
        const endTime = Date.now();
        const duration = endTime - startTime;
        
        output.innerHTML = `‚úÖ –í—Å–µ –∑–∞–ø—Ä–æ—Å—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã –∑–∞ ${duration}–º—Å!\n\n`;
        output.innerHTML += `‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 1: ${results[0].data.name}\n`;
        output.innerHTML += `‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 2: ${results[1].data.name}\n`;
        output.innerHTML += `‚Ä¢ –ü–æ—Å—Ç 1: ${results[2].data.title}\n`;
        output.innerHTML += `‚Ä¢ –ü–æ—Å—Ç 2: ${results[3].data.title}\n`;
    } catch (error) {
        output.innerHTML = `‚ùå –û—à–∏–±–∫–∞ –≤ Promise.all: ${error.message}`;
    }
}

// 6.2. –°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é fetchWithPromiseRace, –∫–æ—Ç–æ—Ä–∞—è –∏—Å–ø–æ–ª—å–∑—É–µ—Ç Promise.race
async function fetchWithPromiseRace() {
    const output = document.getElementById('parallel-output');
    output.innerHTML = "üîÑ –ì–æ–Ω–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤...";
    
    try {
        const promises = [
            fetch('/users/1').then(r => r.json()),
            fetch('/users/2').then(r => r.json()),
            new Promise((_, reject) => 
                setTimeout(() => reject(new Error('–¢–∞–π–º–∞—É—Ç')), 1000)
            )
        ];
        
        const winner = await Promise.race(promises);
        output.innerHTML = `‚úÖ –ü–æ–±–µ–¥–∏—Ç–µ–ª—å –≥–æ–Ω–∫–∏: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å "${winner.data.name}"`;
    } catch (error) {
        output.innerHTML = `‚ùå –ü–æ–±–µ–¥–∏—Ç–µ–ª—å –≥–æ–Ω–∫–∏: ${error.message}`;
    }
}

// 6.3. –°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é fetchSequentialRequests, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–ø–æ–ª–Ω—è–µ—Ç –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã
async function fetchSequentialRequests() {
    const output = document.getElementById('parallel-output');
    output.innerHTML = "üîÑ –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã...";
    
    const startTime = Date.now();
    
    try {
        // 1. –ü–æ–ª—É—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const userResponse = await fetch('/users/1');
        const user = await userResponse.json();
        
        // 2. –ü–æ–ª—É—á–∏—Ç—å –ø–æ—Å—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const postsResponse = await fetch('/posts');
        const posts = await postsResponse.json();
        const userPosts = posts.posts.filter(post => post.userId === user.data.id);
        
        const endTime = Date.now();
        const duration = endTime - startTime;
        
        output.innerHTML = `‚úÖ –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã –∑–∞ ${duration}–º—Å!\n\n`;
        output.innerHTML += `üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${user.data.name}\n`;
        output.innerHTML += `üìù –ü–æ—Å—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${userPosts.length}\n`;
        output.innerHTML += `üí° –†–∞–∑–Ω–∏—Ü–∞ —Å –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã–º–∏: –∑–¥–µ—Å—å –∫–∞–∂–¥—ã–π –∑–∞–ø—Ä–æ—Å –∂–¥–µ—Ç –ø—Ä–µ–¥—ã–¥—É—â–∏–π`;
    } catch (error) {
        output.innerHTML = `‚ùå –û—à–∏–±–∫–∞ –≤ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–∞—Ö: ${error.message}`;
    }
}

// 6.4. –°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é setupParallelRequests, –∫–æ—Ç–æ—Ä–∞—è –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
function setupParallelRequests() {
    document.getElementById('fetch-promise-all').addEventListener('click', fetchWithPromiseAll);
    document.getElementById('fetch-promise-race').addEventListener('click', fetchWithPromiseRace);
    document.getElementById('fetch-sequential').addEventListener('click', fetchSequentialRequests);
}

// –ó–ê–î–ê–ù–ò–ï 7: –†–µ–∞–ª—å–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏

// 7.1. –°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é fetchUserWithPosts, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–ª—É—á–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –µ–≥–æ –ø–æ—Å—Ç—ã
async function fetchUserWithPosts() {
    const output = document.getElementById('scenario-output');
    output.innerHTML = "üîÑ –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –µ–≥–æ –ø–æ—Å—Ç–æ–≤...";
    
    try {
        // –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const userResponse = await fetch('/users/1');
        const user = await userResponse.json();
        
        // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –ø–æ—Å—Ç—ã
        const postsResponse = await fetch('/posts');
        const posts = await postsResponse.json();
        
        // –§–∏–ª—å—Ç—Ä—É–µ–º –ø–æ—Å—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const userPosts = posts.posts.filter(post => post.userId === user.data.id);
        
        output.innerHTML = `
            <div class="user-card">
                <h3>üë§ ${user.data.name}</h3>
                <p>üìß ${user.data.email}</p>
                <p>üìû ${user.data.phone}</p>
                <p>üìù –ü–æ—Å—Ç–æ–≤: ${userPosts.length}</p>
            </div>
        `;
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å—Ç—ã
        userPosts.forEach(post => {
            const postCard = document.createElement('div');
            postCard.className = 'post-card';
            postCard.innerHTML = `
                <h4>${post.title}</h4>
                <p>${post.body}</p>
            `;
            output.appendChild(postCard);
        });
    } catch (error) {
        output.innerHTML = `‚ùå –û—à–∏–±–∫–∞: ${error.message}`;
    }
}

// 7.2. –°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é fetchWithSearch, –∫–æ—Ç–æ—Ä–∞—è —Ä–µ–∞–ª–∏–∑—É–µ—Ç –ø–æ–∏—Å–∫
async function fetchWithSearch() {
    const output = document.getElementById('scenario-output');
    output.innerHTML = "üîÑ –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...";
    
    try {
        const searchTerm = '–∏–≤–∞–Ω'; // –†—É—Å—Å–∫–∞—è –±—É–∫–≤–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞
        const response = await fetch('/users');
        const data = await response.json();
        
        const users = data.users.filter(user => 
            user.name.toLowerCase().includes(searchTerm.toLowerCase())
        );
        
        output.innerHTML = `üîç –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ –ø–æ "${searchTerm}":\n\n`;
        
        if (users.length > 0) {
            users.forEach(user => {
                output.innerHTML += `üë§ ${user.name} (${user.email})\n`;
            });
        } else {
            output.innerHTML += "üòû –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ";
        }
    } catch (error) {
        output.innerHTML = `‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞: ${error.message}`;
    }
}

// 7.3. –°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é simulateFileUpload, –∫–æ—Ç–æ—Ä–∞—è —Å–∏–º—É–ª–∏—Ä—É–µ—Ç –∑–∞–≥—Ä—É–∑–∫—É —Ñ–∞–π–ª–∞
async function simulateFileUpload() {
    const output = document.getElementById('scenario-output');
    const progressBar = document.getElementById('progress-bar');
    
    output.innerHTML = "üîÑ –°–∏–º—É–ª—è—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞...";
    progressBar.style.width = '0%';
    progressBar.textContent = '0%';
    progressBar.style.background = 'linear-gradient(90deg, #00b894, #55efc4)';
    
    try {
        // –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏
        const fileContent = '–≠—Ç–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏.';
        const blob = new Blob([fileContent], { type: 'text/plain' });
        
        const formData = new FormData();
        formData.append('file', blob, 'test.txt');
        formData.append('description', '–¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª');
        
        // –°–∏–º—É–ª—è—Ü–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –∑–∞–≥—Ä—É–∑–∫–∏
        for (let progress = 0; progress <= 100; progress += 10) {
            await new Promise(resolve => setTimeout(resolve, 200));
            progressBar.style.width = `${progress}%`;
            progressBar.textContent = `${progress}%`;
            output.innerHTML = `üì§ –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞... ${progress}%`;
        }
        
        // –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–∞–π–ª–∞
        const response = await fetch('/posts', {
            method: 'POST',
            body: formData
        });
        
        if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);
        
        const result = await response.json();
        output.innerHTML = `‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω!\n\nID: ${result.id}\n–ù–∞–∑–≤–∞–Ω–∏–µ: ${result.title}`;
    } catch (error) {
        output.innerHTML = `‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: ${error.message}`;
        progressBar.style.background = '#d63031';
    }
}

// 7.4. –°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é createFetchCache, –∫–æ—Ç–æ—Ä–∞—è –∫—ç—à–∏—Ä—É–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∑–∞–ø—Ä–æ—Å–æ–≤
function createFetchCache() {
    const cache = new Map();
    
    return async function cachedFetch(url, options = {}) {
        const cacheKey = `${url}-${JSON.stringify(options)}`;
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—ç—à
        if (cache.has(cacheKey)) {
            const cached = cache.get(cacheKey);
            if (Date.now() - cached.timestamp < 30000) { // TTL: 30 —Å–µ–∫—É–Ω–¥
                console.log('üîÑ –í–æ–∑–≤—Ä–∞—â–∞—é –∏–∑ –∫—ç—à–∞:', url);
                return cached.data;
            } else {
                // –£–¥–∞–ª—è–µ–º –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–π –∫—ç—à
                cache.delete(cacheKey);
            }
        }
        
        console.log('üåê –í—ã–ø–æ–ª–Ω—è—é –Ω–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å:', url);
        const response = await fetch(url, options);
        
        if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);
        
        const data = await response.json();
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∫—ç—à
        cache.set(cacheKey, {
            data: data,
            timestamp: Date.now()
        });
        
        return data;
    };
}

// 7.5. –°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é setupRealScenarios, –∫–æ—Ç–æ—Ä–∞—è –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
function setupRealScenarios() {
    document.getElementById('fetch-user-posts').addEventListener('click', fetchUserWithPosts);
    document.getElementById('fetch-search').addEventListener('click', fetchWithSearch);
    document.getElementById('fetch-upload').addEventListener('click', simulateFileUpload);
    document.getElementById('fetch-cache').addEventListener('click', async () => {
        const output = document.getElementById('scenario-output');
        output.innerHTML = "üîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è...";
        
        const cachedFetch = createFetchCache();
        const url = '/users/1';
        
        // –ü–µ—Ä–≤—ã–π –∑–∞–ø—Ä–æ—Å
        output.innerHTML += "\n\n–ü–µ—Ä–≤—ã–π –∑–∞–ø—Ä–æ—Å (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–æ–≤—ã–π)...";
        const start1 = Date.now();
        await cachedFetch(url);
        const duration1 = Date.now() - start1;
        output.innerHTML += `\n–ó–∞–≤–µ—Ä—à–µ–Ω –∑–∞ ${duration1}–º—Å`;
        
        // –í—Ç–æ—Ä–æ–π –∑–∞–ø—Ä–æ—Å (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∏–∑ –∫—ç—à–∞)
        output.innerHTML += "\n\n–í—Ç–æ—Ä–æ–π –∑–∞–ø—Ä–æ—Å (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∏–∑ –∫—ç—à–∞)...";
        const start2 = Date.now();
        await cachedFetch(url);
        const duration2 = Date.now() - start2;
        output.innerHTML += `\n–ó–∞–≤–µ—Ä—à–µ–Ω –∑–∞ ${duration2}–º—Å`;
        
        output.innerHTML += `\n\nüí° –£—Å–∫–æ—Ä–µ–Ω–∏–µ: ${(duration1 - duration2)}–º—Å\n–ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç!`;
    });
}

// –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
function initializeApp() {
    console.log("üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Fetch API –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...");
    
    setupGetRequests();
    setupCrudRequests();
    setupHeadersAndParams();
    setupResponseHandling();
    setupErrorHandling();
    setupParallelRequests();
    setupRealScenarios();
    
    console.log("‚úÖ –í—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã!");
    
    // –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
    setTimeout(() => {
        fetch('/users/1')
            .then(r => r.json())
            .then(data => console.log("‚úÖ –õ–æ–∫–∞–ª—å–Ω—ã–π API —Ä–∞–±–æ—Ç–∞–µ—Ç:", data.data))
            .catch(err => console.log("‚ùå –û—à–∏–±–∫–∞:", err));
    }, 500);
}

// –ó–∞–ø—É—Å–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', initializeApp);

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ç–µ—Å—Ç–æ–≤
if (typeof module !== 'undefined' && module.exports) {
    module.exports = {
        fetchGetRequest,
        fetchPostRequest,
        fetchPutRequest,
        fetchPatchRequest,
        fetchDeleteRequest,
        fetchWithRetry,
        createFetchCache
    };
}
// P.S: –ï—Å–ª–∏ –≤—ã —ç—Ç–æ —á–∏—Ç–∞–µ—Ç–µ - –∑–Ω–∞–π—Ç–µ, —è –ø–µ—Ä–µ–ø—Ä–æ–±–æ–≤–∞–ª –≤—Å–µ–≤–æ–∑–º–æ–∂–Ω—ã–µ –æ—Ç–∫—Ä—ã—Ç—ã–µ –ê–ü–ò, —á—Ç–æ —Ç–æ–ª—å–∫–æ —Å–º–æ–≥ –Ω–∞–π—Ç–∏ –Ω–∞ –ø—Ä–æ—Å—Ç–æ—Ä–∞—Ö —Å—Ä–∞–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞, –æ–¥–Ω–∞–∫–æ –≤—Å–µ–≥–¥–∞ –ª–æ–≤–∏–ª –æ—à–∏–±–∫—É –∫–æ–Ω–Ω–µ–∫—Ç–∞ (—Å—Å—ã–ª–∫–∞ –±—ã–ª–∞ –Ω–∞–ø–∏—Å–∞–Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ), 
// –ø–æ—ç—Ç–æ–º—É, –º–Ω–æ–π –±—ã–ª–æ –ø—Ä–∏–Ω—è—Ç–æ —Ä–µ—à–µ–Ω–∏–µ —Å–æ–∑–¥–∞—Ç—å —Å–≤–æ–π –ª–æ–∫–∞–ª—å–Ω—ã–π –ê–ü–ò –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–π. –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à–µ –≤–Ω–∏–º–∞–Ω–∏–µ –∫ —ç—Ç–æ–º—É –≤–æ–ø—Ä–æ—Å—É.