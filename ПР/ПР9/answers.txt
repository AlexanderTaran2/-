Ответы на контрольные вопросы:
1. O(n) - линейный рост времени, O(n²) - квадратичный рост. Примеры: поиск в массиве O(n), пузырьковая сортировка O(n²).
2. Бинарный поиск делит отсортированный массив пополам на каждом шаге, сокращая область поиска в 2 раза, поэтому сложность O(log n).
3. Пузырьковая сортировка: плюсы - простота, стабильность; минусы - медленная O(n²), неэффективна на больших массивах.
4. Оптимизация isPrime: проверять делители только до √n, исключить чётные числа кроме 2, проверять числа вида 6k±1.
5. Рекурсивный Фибоначчи: красивый код но O(2ⁿ), итеративный: быстрый O(n) и экономит память.
6. Методы отладки: console.log, точки останова в DevTools, тестирование граничных случаев, валидация входных данных.
7. Алгоритм Евклида: НОД(a,b)=НОД(b,a mod b), эффективен из-за быстрого уменьшения чисел на каждом шаге.
8. Edge cases для массивов: пустой массив, один элемент, отрицательные числа, дубликаты, отсортированные данные.
9. Улучшение removeDuplicates: использовать Set для O(1) проверки уникальности вместо O(n) поиска в массиве.
10. Принципы чистого кода: говорящие имена, одна ответственность функций, нет побочных эффектов, обработка ошибок, консистентность.