1. Основное свойство CSS, которое включает Flexbox - это display: flex. После его применения все прямые дочерние элементы автоматически становятся flex-элементами и выстраиваются вдоль главной оси контейнера. Они начинают подчиняться правилам Flexbox-модели, меняя свое поведение относительно распределения пространства и выравнивания.
2. Свойство justify-content отвечает за выравнивание элементов вдоль главной оси контейнера, в то время как align-items управляет выравниванием вдоль поперечной оси. Первое распределяет элементы по горизонтали при основном направлении строки, второе - по вертикали. Например, justify-content можно использовать для равномерного распределения навигационных пунктов, а align-items - для вертикального центрирования содержимого внутри контейнера.
3. Свойство flex-direction определяет направление главной оси, вдоль которой располагаются flex-элементы. Оно может принимать четыре значения: row для расположения слева направо, row-reverse для обратного порядка справа налево, column для вертикального расположения сверху вниз и column-reverse для вертикального расположения снизу вверх. Это свойство напрямую определяет, какая ось считается главной, а какая - поперечной.
4. В сокращенной записи flex: 1 первое число означает flex-grow - способность элемента увеличиваться относительно других, второе - flex-shrink, определяющее возможность уменьшения, и третье - flex-basis, задающее начальный размер. Фактически эта запись указывает, что элемент может свободно растягиваться и сжиматься, начиная с нулевого базового размера.
5. Свойство flex-wrap управляет переносом элементов на новые строки при нехватке места в контейнере. Его следует использовать в ситуациях, когда количество элементов может превышать доступное пространство, например, в галереях изображений, карточках товаров или адаптивных сетках, где важно сохранить читаемость и функциональность при разных размерах экранов.
6. Отличие между align-content и align-items заключается в том, что первое свойство выравнивает строки flex-элементов относительно друг друга, когда их несколько, а второе выравнивает отдельные элементы внутри своей строки. align-content применяется только при наличии многострочного контейнера, в то время как align-items работает в любой ситуации.
7. Свойство order визуально изменяет порядок отображения элементов без физического изменения их положения в HTML-разметке. Это может быть полезно при адаптивном дизайне для перестановки блоков контента на мобильных устройствах, при создании различных визуальных композиций или когда необходимо временно изменить последовательность элементов для целей тестирования.
8. Осевая линия или главная ось - это основное направление, вдоль которого располагаются flex-элементы. Поперечная ось перпендикулярна главной. Их ориентация полностью зависит от значения flex-direction: при горизонтальном направлении главная ось идет слева направо, а поперечная - сверху вниз, при вертикальном направлении оси меняются местами.
9. Создать адаптивный макет без медиа-запросов можно используя комбинацию гибких свойств Flexbox. Автоматический перенос элементов на новые строки вместе с возможностью плавного изменения размеров позволяет создавать макеты, которые естественным образом адаптируются к разной ширине контейнера. Установка минимальных и максимальных размеров предотвращает критические искажения содержимого.
10. Использование gap предоставляет несколько преимуществ: упрощает код за счет замены множественных margin-правил одним свойством, обеспечивает единообразие расстояний между всеми элементами, исключает проблему лишних отступов по краям контейнера и облегчает последующие изменения дизайна. Этот подход более интуитивно понятен и соответствует современным стандартам веб-разработки.